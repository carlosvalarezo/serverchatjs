---
swagger: "2.0"
info:
  description: "This is the chat API"
  version: "1.0.0"
  title: "Chat API"
  contact:
    email: "carlos.valarezo@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:8443"
tags:
- name: "users"
  description: "send messages"
schemes:
- "https"
paths:
  /health:
    get:
      tags:
      - "health endpoint"
      summary: "checks the app is up & running"
      description: "checks the app is up & running"
      operationId: "health"
      produces:
      - "application/json"
      x-swagger-router-controller: "Health"
      responses:
        "200":
          description: "the app is ok"
          schema:
            type: "object"
            properties:
              status:
                type: string
                example: "ok"
              status_code:
                type: integer
                example: 200
  /user:
    post:
      tags:
      - user
      summary: adds a user
      operationId: register
      description: Adds a user to the db
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: user
        description: User to add
        schema:
          $ref: '#/definitions/User'
      responses:
        201:
          description: user created
        400:
          description: invalid input, object invalid
        409:
          description: an existing user already exists
        500:
          description: error
      x-swagger-router-controller: "User"
  /login:
    post:
      tags:
      - "login"
      summary: "logins the user in"
      description: "validates email/password and logs in"
      operationId: "login"
      consumes:
        - application/x-www-form-urlencoded
      produces:
      - application/json
      parameters:
        - in: formData
          name: email
          type: string
          description: A user's email.
          required: true
        - in: formData
          name: password
          type: string
          format: password
          description: A person's password.
          required: true
      responses:
        201:
          description: "user logged in"
        403:
          description: "wrong credentials!"
      x-swagger-router-controller: "login"
  /message:
    get:
      tags:
      - "message"
      summary: "retrieves messages from db"
      description: "retrieves message from db"
      operationId: "getMessage"
      produces:
      - "application/json"
      responses:
        "200":
          description: "return the messages from db"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Message"
        "400":
          description: "bad input parameter"
      x-swagger-router-controller: "Users"
    post:
      tags:
      - "message"
      summary: "adds a message to the db"
      description: "Adds a message to the db"
      operationId: "insert"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: body
        name: user
        description: User to add
        schema:
          $ref: '#/definitions/Message'
      responses:
        "201":
          description: "message created"
        "400":
          description: "invalid input, object invalid"
      x-swagger-router-controller: "Message"
definitions:
  User:
    type: object
    required:
      - name
      - email
      - password
    properties:
      name:
        type: "string"
        example: "my name"
      email:
        type: "string"
        example: "email@email.com"
      password:
        type: "string"
        format: "password"
        example: "my password"
  Message:
    type: "object"
    required:
    - "time"
    - "owner"
    - "message"
    - "chatroom"
    properties:
      time:
        type: "string"
        format: "date-time"
        example: "2016-08-29T09:12:33.001Z"
      message:
        type: "string"
        example: "this is a message"
      owner:
        type: "string"
        example: "1234-5467-1234-1234"
      chatroom:
        type: "string"
        example: "my-chatroom"
